2009年実施 大阪大学 大学院 情報科学研究科 院試
問題1（必須問題：アルゴリズムとプログラミング）
武藤祐子 y-mutoh@ist.osaka-u.ac.jp


■参考:実行結果
30 10 20 40 70 80 60 50
10 30 20 40 70 80 60 50
10 20 30 40 70 80 60 50
10 20 30 40 70 50 60 80
10 20 30 40 60 50 70 80
10 20 30 40 50 60 70 80
10 20 30 40 50 60 70 80
10 20 30 40 50 60 70 80


(1)クイックソート

(2)
1回目:30 10 20 40 70 80 60 50
3回目:10 20 30 40 70 80 60 50

(3)20, 40, 60, 80, 10, 50, 30, 70
leftが毎回右端まで行く⇔(arr[left] < bd)を満たすbdになるようにする．
つまり毎回bd=arr[(a+b)/2]が最大値になればよい．
a b c d e f g h とおく． 
次にbdとなる値が最大になるように当てはめていく．

a b c 80 e f g h	(d=80)
↓
a b c 70 e f g [80]	(h=70)
↓
a b 60 g e f [70 80]  (c = 60)
↓
a b 50 g e [60 70 80]  (f=50)
↓
a 40 e g [50 60 70 80]  (b=40)
↓
a 30 e [40 50 60 70 80] (g=30)
↓
20 e [30 40 50 60 70 80] (a=20)
↓
10 [20 30 40 50 60 70 80] (e=10)

よって
20 40 60 80 10 50 30 70

(4)
(4-1)2n-1
kがbから1ずつ減っていき，0になったら終了
最初の1回 + kが1減るたびに2回
sortの呼び出し.xlsxを参照


(4-2)O(n^2)
arrangeのwhileループがn
arrangeがn回呼び出される

(4-3)
最悪の場合